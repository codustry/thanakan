name: Test

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [ '3.8', '3.9', '3.10']
        experimental: [false]
        include:
          - os: ubuntu-latest
            python-version: "3.11-dev"
            experimental: true

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3.1.1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install and configure Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: false
        virtualenvs-in-project: false

    - name: Set up cache
      uses: actions/cache@v3.2.6
      with:
        path: .venv
        key: venv-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('poetry.lock') }}

    - name: Install dependencies
      run: |
        poetry config virtualenvs.in-project true
        poetry install

    - name: Run safety checks and style check
      run: |
        poetry run pre-commit run --all-files

    - name: Run tests
      env:
        FUND_FACTSHEET_KEY: ${{ secrets.FUND_FACTSHEET_KEY }}
        FUND_DAILY_INFO_KEY: ${{ secrets.FUND_DAILY_INFO_KEY }}
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run: |
        poetry run pytest
